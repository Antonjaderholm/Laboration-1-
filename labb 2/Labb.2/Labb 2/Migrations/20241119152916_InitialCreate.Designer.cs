// <auto-generated />
using System;
using BokhandelSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_2.Migrations
{
    [DbContext(typeof(BokhandelContext))]
    [Migration("20241119152916_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BokhandelSystem.Bocker", b =>
                {
                    b.Property<string>("ISBN13")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ForfattareId")
                        .HasColumnType("int");

                    b.Property<int>("ForlagId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sprak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Utgivningsdatum")
                        .HasColumnType("datetime2");

                    b.HasKey("ISBN13");

                    b.HasIndex("ForfattareId");

                    b.HasIndex("ForlagId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Bocker");
                });

            modelBuilder.Entity("BokhandelSystem.Butiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gatuadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Butiker");
                });

            modelBuilder.Entity("BokhandelSystem.Forfattare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fodelsedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fornamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forfattare");
                });

            modelBuilder.Entity("BokhandelSystem.Forlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forlag");
                });

            modelBuilder.Entity("BokhandelSystem.Kategorier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorier");
                });

            modelBuilder.Entity("BokhandelSystem.Lagersaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("BokISBN13")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ButikId", "ISBN");

                    b.HasIndex("BokISBN13");

                    b.ToTable("Lagersaldo");
                });

            modelBuilder.Entity("BokhandelSystem.Bocker", b =>
                {
                    b.HasOne("BokhandelSystem.Forfattare", "Forfattare")
                        .WithMany("Bocker")
                        .HasForeignKey("ForfattareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BokhandelSystem.Forlag", "Forlag")
                        .WithMany("Bocker")
                        .HasForeignKey("ForlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BokhandelSystem.Kategorier", "Kategori")
                        .WithMany("Bocker")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forfattare");

                    b.Navigation("Forlag");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("BokhandelSystem.Lagersaldo", b =>
                {
                    b.HasOne("BokhandelSystem.Bocker", "Bok")
                        .WithMany("Lagersaldo")
                        .HasForeignKey("BokISBN13");

                    b.HasOne("BokhandelSystem.Butiker", "Butik")
                        .WithMany("Lagersaldo")
                        .HasForeignKey("ButikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bok");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("BokhandelSystem.Bocker", b =>
                {
                    b.Navigation("Lagersaldo");
                });

            modelBuilder.Entity("BokhandelSystem.Butiker", b =>
                {
                    b.Navigation("Lagersaldo");
                });

            modelBuilder.Entity("BokhandelSystem.Forfattare", b =>
                {
                    b.Navigation("Bocker");
                });

            modelBuilder.Entity("BokhandelSystem.Forlag", b =>
                {
                    b.Navigation("Bocker");
                });

            modelBuilder.Entity("BokhandelSystem.Kategorier", b =>
                {
                    b.Navigation("Bocker");
                });
#pragma warning restore 612, 618
        }
    }
}
