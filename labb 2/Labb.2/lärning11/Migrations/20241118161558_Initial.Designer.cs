// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lärning11.Data;

#nullable disable

namespace lärning11.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20241118161558_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lärning11.models.Order_detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ORDERID")
                        .HasColumnType("int");

                    b.Property<int>("PRODUCTID")
                        .HasColumnType("int");

                    b.Property<int>("QUANTITY")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ORDERID");

                    b.HasIndex("PRODUCTID");

                    b.ToTable("order_Details");
                });

            modelBuilder.Entity("lärning11.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal(6,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("lärning11.models.custumers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("custumers");
                });

            modelBuilder.Entity("lärning11.models.order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CustumerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderFulfilled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderPlace")
                        .HasColumnType("datetime2");

                    b.Property<int>("custumersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("custumersid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("lärning11.models.Order_detail", b =>
                {
                    b.HasOne("lärning11.models.order", "order")
                        .WithMany("Order_detail")
                        .HasForeignKey("ORDERID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lärning11.models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("PRODUCTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("order");
                });

            modelBuilder.Entity("lärning11.models.order", b =>
                {
                    b.HasOne("lärning11.models.custumers", "custumers")
                        .WithMany("Orders")
                        .HasForeignKey("custumersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("custumers");
                });

            modelBuilder.Entity("lärning11.models.custumers", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("lärning11.models.order", b =>
                {
                    b.Navigation("Order_detail");
                });
#pragma warning restore 612, 618
        }
    }
}
